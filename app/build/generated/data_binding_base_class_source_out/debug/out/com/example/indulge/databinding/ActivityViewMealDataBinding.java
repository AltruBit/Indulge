// Generated by view binder compiler. Do not edit!
package com.example.indulge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.HorizontalScrollView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.indulge.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityViewMealDataBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnDone;

  @NonNull
  public final LinearLayout exploreLinLayout;

  @NonNull
  public final HorizontalScrollView horizontalScrollView;

  @NonNull
  public final TextView tvMeal;

  @NonNull
  public final TextView tvMealDescription;

  @NonNull
  public final TextView tvPlace;

  private ActivityViewMealDataBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnDone,
      @NonNull LinearLayout exploreLinLayout, @NonNull HorizontalScrollView horizontalScrollView,
      @NonNull TextView tvMeal, @NonNull TextView tvMealDescription, @NonNull TextView tvPlace) {
    this.rootView = rootView;
    this.btnDone = btnDone;
    this.exploreLinLayout = exploreLinLayout;
    this.horizontalScrollView = horizontalScrollView;
    this.tvMeal = tvMeal;
    this.tvMealDescription = tvMealDescription;
    this.tvPlace = tvPlace;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityViewMealDataBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityViewMealDataBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_view_meal_data, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityViewMealDataBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDone;
      Button btnDone = ViewBindings.findChildViewById(rootView, id);
      if (btnDone == null) {
        break missingId;
      }

      id = R.id.exploreLinLayout;
      LinearLayout exploreLinLayout = ViewBindings.findChildViewById(rootView, id);
      if (exploreLinLayout == null) {
        break missingId;
      }

      id = R.id.horizontalScrollView;
      HorizontalScrollView horizontalScrollView = ViewBindings.findChildViewById(rootView, id);
      if (horizontalScrollView == null) {
        break missingId;
      }

      id = R.id.tvMeal;
      TextView tvMeal = ViewBindings.findChildViewById(rootView, id);
      if (tvMeal == null) {
        break missingId;
      }

      id = R.id.tvMealDescription;
      TextView tvMealDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvMealDescription == null) {
        break missingId;
      }

      id = R.id.tvPlace;
      TextView tvPlace = ViewBindings.findChildViewById(rootView, id);
      if (tvPlace == null) {
        break missingId;
      }

      return new ActivityViewMealDataBinding((ConstraintLayout) rootView, btnDone, exploreLinLayout,
          horizontalScrollView, tvMeal, tvMealDescription, tvPlace);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
